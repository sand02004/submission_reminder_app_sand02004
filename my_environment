#!/bin/bash

# Ask for user's name
echo -n "Enter your name: "
read userName

# Define the base directory with user's name
BASE_DIR="submission_reminder_${userName}"

# Define the required directories
DIRS=(
    "$BASE_DIR/app"
    "$BASE_DIR/config"
    "$BASE_DIR/modules"
    "$BASE_DIR/assets"
)

# Define the required files and their locations
FILES=(
    "$BASE_DIR/assets/submissions.txt"
    "$BASE_DIR/config/config.env"
    "$BASE_DIR/app/reminder.sh"
    "$BASE_DIR/modules/functions.sh"
    "$BASE_DIR/startup.sh"
)

# Create directories
for dir in "${DIRS[@]}"; do
    if [ ! -d "$dir" ]; then
        mkdir -p "$dir"
        echo "Created directory: $dir"
    else
        echo "Directory already exists: $dir"
    fi
done

# Create empty files
for file in "${FILES[@]}"; do
    if [ ! -f "$file" ]; then
        touch "$file"
        echo "Created file: $file"
    else
        echo "File already exists: $file"
    fi
done

# Populate submissions.txt with sample data
echo -e "StudentID,Name,Assignment,Deadline,Status" > "$BASE_DIR/assets/submissions.txt"
echo -e "John, Math, not submitted" >> "$BASE_DIR/assets/submissions.txt"
echo -e "Jane, Science, Submitted" >> "$BASE_DIR/assets/submissions.txt"
echo -e "Mark, History, not submitted" >> "$BASE_DIR/assets/submissions.txt"
echo -e "Susan, English, Submitted" >> "$BASE_DIR/assets/submissions.txt"
echo -e "Tom, Physics, not submitted" >> "$BASE_DIR/assets/submissions.txt"
echo -e "Chinemerem, Shell Navigation, not submitted" >> "$BASE_DIR/assets/submissions.txt"
echo -e "Chiagoziem, Git, Submitted" >> "$BASE_DIR/assets/submissions.txt"
echo -e "Divine, Shell Navigation, not submitted" >> "$BASE_DIR/assets/submissions.txt"
echo -e "Anissa, Shell Basics, Submitted" >> "$BASE_DIR/assets/submissions.txt"                                                 echo -e "Kelly, Geograph, Submitted" >> "$BASE_DIR/assets/submissions.txt
echo "Populated submissions.txt with sample student records."

# Create and populate config.env
cat <<EOL > "$BASE_DIR/config/config.env"
# Configuration for the reminder app
ASSIGNMENT="Shell Navigation"
DAYS_REMAINING=2
EOL
echo "Created config.env with assignment details."

# Create and populate reminder.sh
cat <<EOL > "$BASE_DIR/app/reminder.sh"
#!/bin/bash
# Reminder script logic goes here
echo "Reminder: Upcoming assignment deadlines!"
EOL
echo "Created reminder.sh."

# Create and populate functions.sh
cat <<EOL > "$BASE_DIR/modules/functions.sh"
#!/bin/bash
# Function to read submissions file and output students who have not submitted
function check_submissions {
    local submissions_file=\$1
    echo "Checking submissions in \$submissions_file"
    # Skip the header and iterate through the lines
    while IFS=, read -r student assignment status; do
        # Remove leading and trailing whitespace
        student=\$(echo "\$student" | xargs)
        assignment=\$(echo "\$assignment" | xargs)
        status=\$(echo "\$status" | xargs)
        # Check if assignment matches and status is 'not submitted'
        if [[ "\$assignment" == "\$ASSIGNMENT" && "\$status" == "not submitted" ]]; then
            echo "Reminder: \$student has not submitted the \$ASSIGNMENT assignment!"
        fi
    done < <(tail -n +2 "\$submissions_file") # Skip the header
}
EOL
echo "Created functions.sh."

# Create and populate startup.sh
cat <<EOL > "$BASE_DIR/startup.sh"
#!/bin/bash
# Load environment variables and functions
source ./config/config.env
source ./modules/functions.sh
# Path to the submissions file
submissions_file="./assets/submissions.txt"
# Check if the submissions file exists
if [ ! -f "\$submissions_file" ]; then
    echo "Error: Submissions file not found at \$submissions_file"
    exit 1
fi
# Display assignment details from the environment variables
echo "Assignment: \$ASSIGNMENT"
echo "Days remaining to submit: \$DAYS_REMAINING days"
echo "----------------------------------------------"
# Call the function to check submissions
check_submissions "\$submissions_file"
# Final message
echo "Reminder app started successfully!"
EOL
echo "Created startup.sh."

# Set executable permissions for script files
chmod +x "$BASE_DIR/app/reminder.sh"
chmod +x "$BASE_DIR/modules/functions.sh"
chmod +x "$BASE_DIR/startup.sh"

# Final message
echo "Environment setup complete."
